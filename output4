gcc homework4.c -o main &&./main       
homework4.c: In function ‘remove_abonent’:
homework4.c:43:21: warning: initialization of ‘char *’ from incompatible pointer type ‘struct abonent *’ [-Wincompatible-pointer-types]
   43 |         char* ptr = abonent;
      |                     ^~~~~~~
homework4.c: In function ‘find’:
homework4.c:57:25: warning: implicit declaration of function ‘print_abonent’ [-Wimplicit-function-declaration]
   57 |                         print_abonent(directory[i]);
      |                         ^~~~~~~~~~~~~
homework4.c: At top level:
homework4.c:62:6: warning: conflicting types for ‘print_abonent’; have ‘void(struct abonent *)’
   62 | void print_abonent(struct abonent* abonent){
      |      ^~~~~~~~~~~~~
homework4.c:57:25: note: previous implicit declaration of ‘print_abonent’ with type ‘void(struct abonent *)’
   57 |                         print_abonent(directory[i]);
      |                         ^~~~~~~~~~~~~


1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
1
Имя: Sergey
Фамилия: Nick
Телефон: 123


1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
1
Имя: Sergey
Фамилия: Kick
Телефон: 234


1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
1
Имя: Ivan
Фамилия: Pick
Телефон: 345


1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
4
====================
======Абоненты======
====================

Абонент 0
Имя: Sergey

Фамилия: Nick

Телефон: 123

Абонент 1
Имя: Sergey

Фамилия: Kick

Телефон: 234

Абонент 2
Имя: Ivan

Фамилия: Pick

Телефон: 345



1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
3
Введите имя для поиска: Sergey
====================
======Абоненты======
====================

Имя: Sergey

Фамилия: Nick

Телефон: 123

Имя: Sergey

Фамилия: Kick

Телефон: 234



1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
2
Номер абонента для удаления: 2


1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
4
====================
======Абоненты======
====================

Абонент 0
Имя: Sergey

Фамилия: Nick

Телефон: 123

Абонент 1
Имя: Sergey

Фамилия: Kick

Телефон: 234



1) Добавить абонента
2) Удалить абонента
3) Поиск абонентов по имени
4) Вывод всех записей
5) Выход
5
